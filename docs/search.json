[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Project Links"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "New Home Page",
    "section": "",
    "text": "Credit: Danielle Navarro\n\nP5 = require(\"p5\")\n\n\n\n\n\n\n\nfunction* createSketch(sketch) {\n  const element = DOM.element('div');\n  yield element;\n  const instance = new P5(sketch, element, true);\n  try {\n    while (true) {\n      yield element;\n    }\n  } finally {\n    instance.remove();\n  }\n}\n\ncreateSketch(s =&gt; {\n  // Use `s.` to access p5 functions within instance mode\n  s.setup = function() {\n    s.createCanvas(720, 400);\n  };\n\n  let t = 0;\n  s.draw = function() {\n    s.background('#fff');\n    s.translate(s.width / 2, s.height / 2);\n    s.stroke('#0f0f0f');\n    s.strokeWeight(1.5);\n    // Loop for adding 100 lines\n    for (let i = 0; i &lt; 100; i++) {\n      s.line(x1(t + i), y1(t + i), x2(t + i) + 20, y2(t + i) + 20);\n    }\n    t += 0.15;\n  };\n\n  // Update these functions to use `s.sin` and `s.cos`\n  function x1(t) {\n    return s.sin(t / 10) * 125 + s.sin(t / 20) * 125 + s.sin(t / 30) * 125;\n  }\n\n  function y1(t) {\n    return s.cos(t / 10) * 125 + s.cos(t / 20) * 125 + s.cos(t / 30) * 125;\n  }\n\n  function x2(t) {\n    return s.sin(t / 15) * 125 + s.sin(t / 25) * 125 + s.sin(t / 35) * 125;\n  }\n\n  function y2(t) {\n    return s.cos(t / 15) * 125 + s.cos(t / 25) * 125 + s.cos(t / 35) * 125;\n  }\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport plotly.graph_objects as go\nimport pandas as pd\n# Read data from a csv\nz_data = pd.read_csv('https://raw.githubusercontent.com/plotly/datasets/master/api_docs/mt_bruno_elevation.csv')\n\nfig = go.Figure(data=[go.Surface(z=z_data.values)])\n\nfig.update_layout(title='Mt Bruno Elevation', autosize=False,\n                  width=500, height=500,\n                  margin=dict(l=65, r=50, b=65, t=90))\n\nfig.show()"
  }
]